apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

android {
  def configToolsDir = "$project.rootDir/configtools"

  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    applicationId rootProject.ext.applicationId
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
  }

  signingConfigs {
    debugSign {
      keyAlias 'androiddebugkey'
      keyPassword 'android'
      storePassword 'android'
      storeFile file("$configToolsDir/debug.keystore.jks")
    }
    releaseSign {
    }
  }

  buildTypes {
    debug {
      debuggable true
      minifyEnabled false
      signingConfig signingConfigs.debugSign
      proguardFiles fileTree(dir: "$configToolsDir/proguard/rules", include: ['*.pro']).asList().toArray()
      proguardFiles getDefaultProguardFile('proguard-android.txt'), "$configToolsDir/proguard/proguard-rules-debug.pro"
    }

    release {
      minifyEnabled true
      signingConfig signingConfigs.releaseSign
      //Include all files in proguardRules folder
      proguardFiles fileTree(dir: '../configtools/proguard/rules', include: ['*.pro']).asList().toArray()
      proguardFiles getDefaultProguardFile('proguard-android.txt'), "$configToolsDir/proguard/proguard-rules.pro"
    }
  }

  productFlavors {
    dev {
      versionCode rootProject.ext.versionCodeTime
      versionName rootProject.ext.versionName
      applicationIdSuffix ".debug"

      buildConfigField("String", "ENDPOINT_URL", '"https://fierce-harbor-90458.herokuapp.com/"')
    }
    prod {
      versionCode rootProject.ext.versionCode
      versionName rootProject.ext.versionName

      buildConfigField("String", "ENDPOINT_URL", "")
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/rxjava.properties'
  }

  //Append versionName to apk
  applicationVariants.all { variant ->
    variant.outputs.each { output ->
      def file = output.outputFile
      output.outputFile = new File(
          file.parent,
          file.name.replace(".apk", "-${variant.mergedFlavor.versionName}.apk")
      )
    }
  }
}

greendao {
  schemaVersion 1
}

def getSecret(String key) {
  def SECRETS_FILE_NAME = "../configtools/secrets.properties"
  Properties prop = new Properties()
  prop.load(new FileInputStream(file(SECRETS_FILE_NAME)))
  return "\"" + prop.getProperty(key) + "\""
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])

  compile "com.android.support:appcompat-v7:$supportLibVersion"
  compile "com.android.support:design:$supportLibVersion"
  compile "com.android.support:cardview-v7:$supportLibVersion"
  compile "com.android.support:support-annotations:$supportLibVersion"
  compile "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
  compile "com.jakewharton:butterknife:$butterKnifeVersion"
  annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"
  compile "com.github.bumptech.glide:glide:$glideVersion"
  compile "com.squareup.okhttp3:okhttp:$okhttpVersion"
  compile "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
  compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
  compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"
  compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rxJavaAdapterVersion"
  compile "org.parceler:parceler-api:$parcelerVersion"
  annotationProcessor "org.parceler:parceler:$parcelerVersion"
  compile "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
  compile "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
  annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
  compile "com.google.dagger:dagger:$daggerVersion"
  provided "javax.annotation:jsr250-api:$javaxAnnonationVersion"
  compile "javax.inject:javax.inject:$javaxVersion"
  compile "org.greenrobot:greendao:$greenDaoVersion"

  //Development
  compile "com.facebook.stetho:stetho:$stethoVersion"
  debugCompile "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
  releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
  testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
}
